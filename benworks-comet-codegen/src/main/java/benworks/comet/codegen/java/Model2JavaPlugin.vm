#set( $class = $metadata )

// ${dontedit} Generated By Ivan gg

package ${plugin.getPackage($class)};


#foreach( $beanProperty in $class.getBeanProperties() )
#set( $importname = $beanProperty.type.value )
#if ($importname.indexOf(".")>= 0&&!$importname.startsWith("java.lang."))
#if (!${plugin.isSamePackage($class,$beanProperty.type.javaClass)})
import ${importname};
#end
#end
#end

#if ($class.comment)
  /** ${class.comment} */
#end
#if ($class.superClass.javaClass.fullyQualifiedName == "java.lang.Object" || !${plugin.isAcceptable($class.superClass.javaClass)})
public class ${class.name}{
#else
public class ${class.name} extends ${class.superClass.javaClass.name}{
#end
#foreach( $field in $class.getFields() )
#if ($field.static && $field.public && $field.final)
#if ($field.comment)
	/** ${field.comment} */
#end
	public final static ${field.type} ${field.name} = ${field.initializationExpression};

#end
#end
#foreach( $nestClass in $class.getNestedClasses() )
#set($index = 0)
#foreach( $field in $nestClass.getFields() )
#if ($field.comment)
	// ${field.comment}
#end
	public final static int ${nestClass.name}_${field.name} = $index;
#set($index = $index + 1)
    
#end
#end
#foreach( $enumClass in $plugin.getIncludeEnums($class) )
#set($index = 0)
#foreach( $field in $enumClass.getFields() )
#if ($field.comment)
	// ${field.comment}
#end
	public final static int ${enumClass.name}_${field.name} = $index;
#set($index = $index + 1)
    
#end
#end

#foreach( $beanProperty in $class.getBeanProperties() )
#if (${plugin.isSuitableProperty($beanProperty)})
#if ($beanProperty.accessor.comment)
	/** ${beanProperty.accessor.comment} */
#end
	#set($propertyType=${plugin.getPropertyType($beanProperty)})
	#set($propertyName=${plugin.capitalize($beanProperty.name)})
    public ${propertyType} ${beanProperty.name};
    
#end
#end

}